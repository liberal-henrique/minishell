
Syntax ERROR
- echo ola 			  (NO ERROR)
- echo ola > outfile  (NO ERROR)
- echo ola >> outfile (NO ERROR)
- echo Luiz henrique > outfile | wc (NO ERROR)
- echo ola > > outfile 	ERROR
- echo ola >| outfile 	ERROR
- echo ola > outfile | 	ERROR
- echo ola > outfile || ERROR
- || 					ERROR
- |> 					ERROR
- >| 					ERROR
- echo "'$HOME'" --> '/nfs/homes/lliberal'	CHECK
- echo '"$HOME"' --> "$HOME" 				CHECK

HereDoc
- cat << NO > out2 | cat << YES > out1 --> Estou indicando syntax error

-cat << $HOME --> Expansion no delimiter and no texto
>$USER
>$PATH
lliberal
$minishell

-cat << '$HOME' --> No Expansions and the EOF without quotes
>$USER
>'$HOME'
>$HOME
$USER
'$HOME'
$HOME

- cat << "$HOME" --> No Expansions and the EOF without quotes
>$USER
>'$HOME'
>$HOME
$USER
$PATH

Parsing Testes
- env -i ./minishell --> Isso limita nosso env a nenhuma variavel env
- Sem string no line --> O Minishell esta a fechar
- Uma string qualquer ---> (CHECK)
- echo "Ola, mundo" CHECK (Estou a tirar as aspas duplas)
- echo "Ola, mundo" > outfile CHECK (Escreve a msg como deve ser dentro do file)
- < outfile wc > test CHECK (Estou a apanhar o outfile anterior e empurrar tudo para o test)
- ls < Makefile -l | wc >outfile2 -l CHECK
- ls < Makefile > outfile -l | wc >outfile2 -l CHECK

Testes para execucao
- Caso apaguemos todas as nossas variaveis de ambiente devemos rodar o nosso minishell na mesma.
Contudo, nossa execucao deve ser paralisada.
- Caso apaguemos nosso PATH os nossos Builtin devem continuar a executar normalmente, porem
as demais variaveis devem paralisar. Contudo, caso a pessoa passe o absolute path as coisas
voltaram a executar.

Redirecoes
- ls | wc CHECK
- cat < infile | wc > outfile CHECK
- < infile cat | wc > outfile > outfile5 > outfile4 > outfile6 > outfile9 > outfile90 CHECK
- < infile cat | wc | echo "henrique" | > outfile > outfile5 > outfile4 | ls | > outfile6 > outfile9 > outfile90 CHECK
(Teste para lidar com as redirecoes in and out. Contudo, a funcao precisa ser refatorada para para menos de 25 linhas)


Testes para Pipes
- cat | ls --> (CHECK)
- cat /dev/random | head (CHECK)
- cat | cat | cat | ls --> (CHECK)

Tests paara o echo
- echo Ola (CHECK)
- echo $HO"ME"
- echo -n Ola (CHECK)
- echo -nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn Ola (CHECK)
- echo -nnnnnnnnnnnnnnnnnnnnnnnnxxxxxnn Ola (CHECK)
- echo $HOME > outfile | wc -l (CHECK)

Testes para cd
- cd
- cd -
- cd /
- cd /bin
- cd ../../

Testes para Export e env
--> export name= -->Devemos criar uma variavel com uma string vazia.
--> export name=1234 && env
--> export name=luiz && env
--> export name="luiz Henrique" && env
--> Eh suposto eu conseguir criar varias variaveis de uma vez so
--> E o unset
--> export "HI= hi" + export "HI= hi" e nao eh suposto add uma nova linha.
--> export y=1 y=2 y=3 y=4 y=4 .y=5 y=10
--> export y=1 y=2 y=3 y=4 y=4 .y=5 y=11 t=12 t=13 x=22


Testes unset
--> export a=1 b=2 c=3 d=4 e=5
	unset a b c d e
--> export a=1 a=2 a=3 c=4 c=5 d=6 f=7 .f=9
	unset a c d f USER
--> export a=1 a=2 a=3 c=4 c=5 d=6 f=7 .f=9
	unset USER f c a

Testes Exit
--> exit 10 + $? apos o encerramos deve retornar o codigo 10; (CHECK)
--> exit -10 + $? apos o encerramos deve retornar o codigo 246; (CHECK)


testes para dia 31 de maio

--> echo ola 							(CHECK)
--> echo $HOME (expandiu, sem leaks)	(CHECK)
--> echo "$HOME" (expandiu, sem leaks)	(CHECK)
--> echo '$HOME' (expandiu, sem leaks)	(CHECK)
--> cat << '$HOME' --> No expansion, parou no delimiter e nao detectou leaks. (CHECK)
--> cat << "$HOME" --> No expansion, parou no delimiter e nao detectou leaks. (CHECK)

--> export a  --> deveria criar uma variavel sozinha (CHECK)
--> export b= --> deveria criar uma variavel com igual e as aspas duplas  (CHECK)
--> export c=12 --> cria normalmente		(CHECK)
--> export 1m=12 --> Nao eh criado			(CHECK)
--> export m1=12 --> eh criado normalmente	(CHECK)

--> export bana banana bananana && unset banana --> esta a correr bem (CHECK)


--> cat | ls --> funciona bem sem leaks(CHECK)
--> ls | ls --> funciona bem sem leaks(CHECK)

--> cat << "$HOME" --> funciona bem (CHECK)
--> cat << '$HOME' --> funciona bem (CHECK)
--> cat << $HOME$ --> estava detetar um leak de memoria pois o line fazia a expansao (CHECK)
e o strncmp fazia o break. COntudo, o free(line) nao era alcancado. Portanto,
coloquei um free(line) dentro do ft_strncmp. Assim nao esta mais a detetar os leaks.

--> sleep 3 | exit --> aguarda o sleep e depois retorna o terminal (CHECK)

--> exit (saiu sem leaks)				(CHECK)


--> echo "ola'aoishdfla"kj"sdfl'" --> ola'aoishdflakjsdfl'
--> echo "ola,'mundo'" --> ola,'mundo'
--> echo "ola,'m"u"ndo'" --> ola,'mundo'
--> echo 'ola,'m"u"ndo'' --> ola,mundo
--> echo 'ola,'mundo'' --> ola,mundo

--> echo $. --> $.
--> echo $HOME$

para comparar
terei de analisa

---> export a n atualiza no env



Tasks dia 03 de JUNHO

--> unset esta com memories leaks

